/*
 * SerialTesterView.java
 */

package serialtester;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 * The application's main frame.
 */
public class SerialTesterView extends FrameView {

    private SerialPortModel serialPortModel;

    public SerialTesterView(SingleFrameApplication app) {
        super(app);

        serialPortModel = SerialTesterApp.getApplication().getSerialPortModel();
        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = SerialTesterApp.getApplication().getMainFrame();
            aboutBox = new SerialTesterAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        SerialTesterApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabelLogo = new javax.swing.JLabel();
        jComboBoxSerialPort = new javax.swing.JComboBox();
        jLabelSerialPort = new javax.swing.JLabel();
        jTextFieldBauds = new javax.swing.JTextField();
        jLabelBauds = new javax.swing.JLabel();
        jButtonSend = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableValues = new javax.swing.JTable();
        jTextFieldDelay = new javax.swing.JTextField();
        jLabelDelay = new javax.swing.JLabel();
        jButtonSetBauds = new javax.swing.JButton();
        jButtonSetDelay = new javax.swing.JButton();
        jButtonFindPorts = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        jLabelStatus = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(serialtester.SerialTesterApp.class).getContext().getResourceMap(SerialTesterView.class);
        jLabelLogo.setIcon(resourceMap.getIcon("jLabelLogo.icon")); // NOI18N
        jLabelLogo.setText(resourceMap.getString("jLabelLogo.text")); // NOI18N
        jLabelLogo.setName("jLabelLogo"); // NOI18N

        jComboBoxSerialPort.setModel(this.serialPortModel);
        jComboBoxSerialPort.setName("jComboBoxSerialPort"); // NOI18N
        jComboBoxSerialPort.setSelectedIndex(0);
        jComboBoxSerialPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSerialPortActionPerformed(evt);
            }
        });

        jLabelSerialPort.setText(resourceMap.getString("jLabelSerialPort.text")); // NOI18N
        jLabelSerialPort.setName("jLabelSerialPort"); // NOI18N

        jTextFieldBauds.setText(resourceMap.getString("jTextFieldBauds.text")); // NOI18N
        jTextFieldBauds.setName("jTextFieldBauds"); // NOI18N

        jLabelBauds.setText(resourceMap.getString("jLabelBauds.text")); // NOI18N
        jLabelBauds.setName("jLabelBauds"); // NOI18N

        jButtonSend.setText(resourceMap.getString("jButtonSend.text")); // NOI18N
        jButtonSend.setName("jButtonSend"); // NOI18N
        jButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N
        jScrollPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jScrollPane1PropertyChange(evt);
            }
        });

        jTableValues.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Values"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableValues.setName("jTableValues"); // NOI18N
        jTableValues.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTableValuesFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jTableValues);
        jTableValues.getColumnModel().getColumn(0).setResizable(false);
        jTableValues.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTableValues.columnModel.title0")); // NOI18N
        jTableValues.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent evt)  {
                jTableValuesModelChanged(evt);
            }
        });;

        jTextFieldDelay.setText(resourceMap.getString("jTextFieldDelay.text")); // NOI18N
        jTextFieldDelay.setName("jTextFieldDelay"); // NOI18N

        jLabelDelay.setText(resourceMap.getString("jLabelDelay.text")); // NOI18N
        jLabelDelay.setName("jLabelDelay"); // NOI18N

        jButtonSetBauds.setText(resourceMap.getString("jButtonSetBauds.text")); // NOI18N
        jButtonSetBauds.setName("jButtonSetBauds"); // NOI18N
        jButtonSetBauds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSetBaudsActionPerformed(evt);
            }
        });

        jButtonSetDelay.setText(resourceMap.getString("jButtonSetDelay.text")); // NOI18N
        jButtonSetDelay.setName("jButtonSetDelay"); // NOI18N
        jButtonSetDelay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSetDelayActionPerformed(evt);
            }
        });

        jButtonFindPorts.setText(resourceMap.getString("jButtonFindPorts.text")); // NOI18N
        jButtonFindPorts.setName("jButtonFindPorts"); // NOI18N
        jButtonFindPorts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFindPortsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jLabelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSerialPort)
                            .addComponent(jLabelBauds)
                            .addComponent(jLabelDelay))
                        .addGap(13, 13, 13)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldDelay)
                            .addComponent(jComboBoxSerialPort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldBauds, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonFindPorts, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jButtonSetBauds, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jButtonSetDelay, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))
                    .addComponent(jButtonSend, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(328, 328, 328))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelDelay))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBoxSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelSerialPort)
                                    .addComponent(jButtonFindPorts, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldBauds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelBauds)
                                    .addComponent(jButtonSetBauds))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonSetDelay))
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(111, 111, 111))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(serialtester.SerialTesterApp.class).getContext().getActionMap(SerialTesterView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        jLabelStatus.setText(resourceMap.getString("jLabelStatus.text")); // NOI18N
        jLabelStatus.setName("jLabelStatus"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusMessageLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusMessageLabel)
                            .addComponent(statusAnimationLabel)
                            .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelStatus)
                        .addContainerGap())))
        );

        jFormattedTextField1.setText(resourceMap.getString("jFormattedTextField1.text")); // NOI18N
        jFormattedTextField1.setName("jFormattedTextField1"); // NOI18N

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableValuesModelChanged(TableModelEvent evt)
    {
        
        TableModel model = jTableValues.getModel();
        for(int i=0;i<model.getRowCount(); i++)
        {
            try
            {
                short val = (Short) model.getValueAt(i, 0);
                System.out.println("value for row " + i + " is " + val);
                if(!SerialTesterApp.getApplication().checkValue(val))
                {
                    this.jLabelStatus.setText("The value entered in not a byte !");
                    jTableValues.setEditingRow(i);
                    jTableValues.changeSelection(i, 0, true, true);
                    model.setValueAt((short)0, i, 0);
                    break;
                }
            }
            catch(Exception ex)
            {
                //System.out.println("Cannot get value for row " + i);
            }
        }
    }

    private void jComboBoxSerialPortActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBoxSerialPortActionPerformed
    {//GEN-HEADEREND:event_jComboBoxSerialPortActionPerformed
        SerialTesterApp.getApplication().selectSerialPort(jComboBoxSerialPort.getSelectedIndex());
    }//GEN-LAST:event_jComboBoxSerialPortActionPerformed

    private void jButtonSetBaudsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSetBaudsActionPerformed
    {//GEN-HEADEREND:event_jButtonSetBaudsActionPerformed
        try
        {
            SerialTesterApp.getApplication().setBaudRate(Integer.parseInt(jTextFieldBauds.getText()));
        }
        catch(NumberFormatException ex)
        {
            this.jLabelStatus.setText("Bauds rate is not a valid value !");
            jTextFieldBauds.requestFocus();
        }
    }//GEN-LAST:event_jButtonSetBaudsActionPerformed

    private void jButtonSetDelayActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSetDelayActionPerformed
    {//GEN-HEADEREND:event_jButtonSetDelayActionPerformed
        try
        {
            SerialTesterApp.getApplication().setDelay(Integer.parseInt(jTextFieldDelay.getText()));
        }
        catch(NumberFormatException ex)
        {
            this.jLabelStatus.setText("Delay is not a valid value !");
            jTextFieldDelay.requestFocus();
        }
           

    }//GEN-LAST:event_jButtonSetDelayActionPerformed

    private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSendActionPerformed
    {//GEN-HEADEREND:event_jButtonSendActionPerformed
        try
        {
            // get values
            TableModel model = this.jTableValues.getModel();
            Byte[] byteval = new Byte[model.getRowCount()];
            for (int i = 0; i < model.getRowCount(); i++)
            {
                Short val = (Short) model.getValueAt(i, 0);
                if(val == null)
                {
                    byteval[i] = null;
                }
                else
                {
                    byteval[i] = val.byteValue();
                }
                
            }
            SerialTesterApp.getApplication().sendData(byteval);
            this.jLabelStatus.setText("Sending data...");
        }
        catch (NoDataException ex)
        {
            this.jLabelStatus.setText("There is nothing to send !");
            jTableValues.requestFocus();
        }
        catch (PleaseWaitException ex)
        {
            this.jLabelStatus.setText("Already sending... Please wait !");
        }

    }//GEN-LAST:event_jButtonSendActionPerformed

    private void jScrollPane1PropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_jScrollPane1PropertyChange
    {//GEN-HEADEREND:event_jScrollPane1PropertyChange

    }//GEN-LAST:event_jScrollPane1PropertyChange

    private void jTableValuesFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jTableValuesFocusLost
    {//GEN-HEADEREND:event_jTableValuesFocusLost
        if(jTableValues.getCellEditor() != null)
            jTableValues.getCellEditor().stopCellEditing();
    }//GEN-LAST:event_jTableValuesFocusLost

    private void jButtonFindPortsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonFindPortsActionPerformed
    {//GEN-HEADEREND:event_jButtonFindPortsActionPerformed
        this.jComboBoxSerialPort.setModel(SerialTesterApp.getApplication().getSerialPortModel());
        this.jComboBoxSerialPort.setSelectedIndex(0);
    }//GEN-LAST:event_jButtonFindPortsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFindPorts;
    private javax.swing.JButton jButtonSend;
    private javax.swing.JButton jButtonSetBauds;
    private javax.swing.JButton jButtonSetDelay;
    private javax.swing.JComboBox jComboBoxSerialPort;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabelBauds;
    private javax.swing.JLabel jLabelDelay;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JLabel jLabelSerialPort;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableValues;
    private javax.swing.JTextField jTextFieldBauds;
    private javax.swing.JTextField jTextFieldDelay;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
